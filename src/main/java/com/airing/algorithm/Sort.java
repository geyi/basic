package com.airing.algorithm;

/**
 * <p>1! + 2! + ... + n!
 * 利用n! = (n - 1)! * n，每次循环只需要用上一个数的计算结果乘以当前的数值
 * 做到了每次循序只做一次乘法运算
 *
 * <p>选择排序
 * <li>从0 ~ n-1的下标中选出数值最小的数放在0位置
 * <li>从1 ~ n-1的下标中选出数值最小的数放在1位置
 * <li>...
 * <li>从n-2 ~ n-1的下标中选出数值最小的数放在n-2位置
 *
 * <p>冒泡排序
 * <li>下标0 ~ n-1范围的数据进行两两比较（更大的数后移）
 * <li>下标0 ~ n-2范围的数据进行两两比较（更大的数后移）
 * <li>...
 * <li>下标0 ~ 1范围的数据进行两两比较（更大的数后移）
 *
 * <p>插入排序
 * <li>从下标0 ~ 1的元素中选取下标为1的元素与前面的数两两比较找到合适的位置插入
 * <li>从下标0 ~ 2的元素中选取下标为2的元素与前面的数两两比较找到合适的位置插入
 * <li>...
 * <li>从下标0 ~ n-1的元素中选取下标为n-1的元素与前面的数两两比较找到合适的位置插入
 *
 * @author GEYI
 * @date 2021年09月25日 11:43
 */
public class Sort {

}
